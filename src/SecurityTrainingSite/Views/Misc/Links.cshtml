@using DataAccessLayer
@model SecurityTrainingSite.Models.Misc.LinksViewModel

@{
	ViewData["Title"] = "Links";
	List<string> links = ViewBag.Links;
}

<h2>@ViewData["Title"].</h2>
<h4>Link recommendation</h4>

<div class="row">
	<div class="col-md-8">
		<section>
			<form asp-controller="Misc" asp-action="Links" class="form-horizontal">
				<hr />
				<div asp-validation-summary="All" class="text-danger"></div>
				<div class="form-group">
					<label asp-for="Link" class="col-md-2 control-label"></label>
					<div class="col-md-10">
						<input asp-for="Link" class="form-control" />
						<span asp-validation-for="Link" class="text-danger"></span>
					</div>
				</div>
				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<button type="submit" class="btn btn-default">Recommend link</button>
					</div>
				</div>
			</form>
		</section>
	</div>
</div>

@if (null != links)
			{
	<hr/>
	<table class="table table-bordered table-striped">
		<thead>
			<tr>
				<th width="50%">Recommended links</th>
			</tr>
		</thead>
		<tbody>
			@foreach (string link in links)
			{
				var rawLink = Html.Raw(link.StartsWith(@"http://") ? link : @"http://" + link);
				<tr>
					<td>
						<a href="@rawLink">@link</a>
					</td>
				</tr>
				}
		</tbody>
	</table>
}

@section Scripts {
	@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
